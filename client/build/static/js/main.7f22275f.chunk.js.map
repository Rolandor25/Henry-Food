{"version":3,"sources":["components/Buton/Buton.jsx","components/Nav/Nav.jsx","components/CreateRecipe/CreateRecipe.jsx","redux/actions/index.js","components/RecipeCard/RecipeCard.jsx","components/RecipeList/RecipeList.jsx","components/RecipeDetail/RecipeDetail.jsx","App.js","redux/reducer/index.js","redux/store/index.js","index.js"],"names":["IniButon","Fragment","to","Nav","CreateRecipe","React","useState","name","resume","hs","steps","image","diets","input","setInput","checked","setChecked","handleChange","event","preventDefault","prev","target","value","handleCheck","updatedList","splice","indexOf","dispatch","useDispatch","onSubmit","type","payload","handlesubmit","onChange","className","map","item","index","charAt","toUpperCase","slice","RecipeCard","id","connect","state","RecipeX","recipe","r","RecipeDetail","App","exact","path","component","RecipeList","initialState","composeEnhanscer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","action","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"0NAGe,SAASA,IACpB,OACI,cAAC,IAAMC,SAAP,UACI,cAAC,IAAD,CAAMC,GAAG,WAAT,SACI,iDAIf,CCRc,SAASC,IACpB,OACI,cAAC,IAAMF,SAAP,UACI,8BACI,+BACI,6BAAI,cAAC,IAAD,CAASC,GAAI,WAAb,oBACJ,6BAAI,cAAC,IAAD,CAASA,GAAI,kBAAb,6BACJ,6BAAI,cAAC,IAAD,CAASA,GAAI,SAAb,gCAMvB,C,+CCZc,SAASE,IAEpB,MAAoBC,IAAMC,SAAS,CAACC,KAAK,GAAGC,OAAO,GAAGC,GAAG,GAAGC,MAAM,GAAGC,MAAM,GAAGC,MAAM,KAApF,mBAAIC,EAAJ,KAAUC,EAAV,KACA,EAA2BT,IAAMC,SAAS,IAA1C,mBAAIS,EAAJ,KAAaC,EAAb,KAIIC,EAAa,SAACC,GACdA,EAAMC,iBACNL,GAAS,SAACM,GAAD,mBAAC,eAAcA,GAAf,kBAAqBF,EAAMG,OAAOd,KAAMW,EAAMG,OAAOC,OAArD,GACZ,EAGGC,EAAc,SAACL,GACf,IAAIM,EAAW,YAAOT,GAClBG,EAAMG,OAAON,QACfS,EAAW,sBAAOT,GAAP,CAAgBG,EAAMG,OAAOC,QAExCE,EAAYC,OAAOV,EAAQW,QAAQR,EAAMG,OAAOC,OAAQ,GAE1DN,EAAWQ,EACd,EAIGG,EAAWC,cAaf,OACI,eAAC,IAAM3B,SAAP,WACI,oDACA,uBACA,uBAAM4B,SAAU,SAAAX,GAAK,OAhBZ,SAACA,GACdA,EAAMC,iBACNN,EAAMD,MAAMG,EAIZY,EC/BE,CAACG,KAAK,gBAAiBC,QD+BHlB,IAEtBC,EAAS,CAACP,KAAK,GAAGC,OAAO,GAAGC,GAAG,GAAGC,MAAM,GAAGC,MAAM,IACpD,CAO8BqB,CAAad,EAAf,EAArB,UACI,gCACI,kDACA,uBAAOY,KAAM,OAAQvB,KAAM,OAAQe,MAAOT,EAAMN,KAChD0B,SAAU,SAACf,GAAD,OAASD,EAAaC,EAAtB,OAEd,gCACI,6CACA,uBAAOY,KAAM,OAAQvB,KAAM,SAAUe,MAAOT,EAAML,OAClDyB,SAAU,SAACf,GAAD,OAASD,EAAaC,EAAtB,OAEd,gCACI,mDACA,uBAAOY,KAAM,OAAQvB,KAAM,QAASe,MAAOT,EAAMH,MACjDuB,SAAU,SAACf,GAAD,OAASD,EAAaC,EAAtB,OAEd,gCACI,oDACA,uBAAOY,KAAM,SAAUvB,KAAM,KAAMe,MAAOT,EAAMJ,GAChDwB,SAAU,SAACf,GAAD,OAASD,EAAaC,EAAtB,OAEV,sBAAKgB,UAAU,YAAf,UACI,qBAAKA,UAAU,QAAf,0BACA,qBAAKA,UAAU,aAAf,SA7DD,CAAC,cAAe,YAAa,aAAc,mBAAmB,iBAAkB,uBAAwB,QAAS,cAAe,cAAe,SAAU,aAAc,WAAY,cA8DvKC,KAAI,SAACC,EAAMC,GAAP,OACX,gCACA,uBAAOP,KAAK,WAAWR,MAAOc,EAAMH,SAAUV,IAAgBa,EAAKE,OAAO,GAAGC,cAAgBH,EAAKI,MAAM,KAD9FH,EADC,SAOvB,gCACI,4CACA,uBAAOP,KAAM,OAAQvB,KAAM,QAASe,MAAOT,EAAMF,MACjDsB,SAAU,SAACf,GAAD,OAASD,EAAaC,EAAtB,OAEd,uBAIA,uBAAOY,KAAM,SAAWR,MAAO,WAC/B,uBAAOQ,KAAM,QAAUR,MAAO,eAI7C,CExFc,SAASmB,EAAT,GAA2C,IAAtBC,EAAqB,EAArBA,GAAG/B,EAAkB,EAAlBA,MAAMJ,EAAY,EAAZA,KAAKK,EAAO,EAAPA,MAC9C,OACE,gCACM,8BAAMD,IACN,eAAC,IAAD,CAAMT,GAAE,mBAAcwC,GAAtB,cAA8BnC,EAA9B,OACA,8BAAMK,MAGjB,CCWc+B,mBANf,SAAyBC,GACrB,MAAM,CACFC,QAASD,EAAME,OAEtB,GAEsC,KAAxBH,EAlBR,YAA+B,IAAVE,EAAS,EAATA,QACxB,OACI,8BAEQA,GAAWA,EAAQV,KAAI,SAAAY,GAAC,OAAE,8BACtB,cAACN,EAAD,CAAuBC,GAAIK,EAAEL,GAAI/B,MAAOoC,EAAEpC,MAAOJ,KAAMwC,EAAExC,KAAMK,MAAOmC,EAAEnC,OAAvDmC,EAAEL,KADC,KAMvC,ICZc,SAASM,EAAT,GAA4D,EAArCN,GAAsC,IAAnC/B,EAAkC,EAAlCA,MAAMJ,EAA4B,EAA5BA,KAAKC,EAAuB,EAAvBA,OAAOC,EAAgB,EAAhBA,GAAGC,EAAa,EAAbA,MAAME,EAAO,EAAPA,MAChE,OACE,gCACM,8BAAMD,IACN,8BAAMJ,IACN,4CAAeC,KACf,kDAAqBC,KACrB,0CAAaC,KACb,0CAAaE,OAGxB,CCWcqC,MAbf,WACE,OACE,eAAC,IAAMhD,SAAP,WAEE,cAAC,IAAD,CAAOiD,OAAK,EAACC,KAAM,IAAKC,UAAWpD,IACnC,cAAC,IAAD,CAAOmD,KAAM,WAAYC,UAAWjD,IACpC,cAAC,IAAD,CAAOgD,KAAM,WAAYC,UAAWC,IACpC,cAAC,IAAD,CAAOH,OAAK,EAACC,KAAM,cAAeC,UAAWJ,IAC7C,cAAC,IAAD,CAAOE,OAAK,EAACC,KAAM,kBAAmBC,UAAWhD,MAGtD,E,QCnBGiC,EAAM,EACJiB,EAAa,CACfT,QAAQ,I,YCGNU,EAAiBC,OAAOC,sCAAwCC,IAChEC,EAAQC,aDFC,WAAgD,IAA3BhB,EAA0B,uDAApBU,EAAaO,EAAO,uCAC1D,MACS,kBADDA,EAAO/B,KAEA,2BACAc,GADP,IAEIC,QAAQ,GAAD,mBAAMD,EAAMC,SAAZ,4BAAwBgB,EAAO9B,SAA/B,IAAuCW,GAAGL,UAG9C,eAAIO,EAEtB,GCRqCW,EAAiBO,YAAgBC,OAExDJ,ICFfK,IAASC,OACT,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACE,cAAC,IAAD,UACE,cAAC,EAAD,QAIFO,SAASC,eAAe,Q","file":"static/js/main.7f22275f.chunk.js","sourcesContent":["import React from \"react\"\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function IniButon() {\r\n    return(\r\n        <React.Fragment>\r\n            <Link to='/recipes'>\r\n                <button>'ENTRAR'</button>\r\n            </Link>\r\n        </React.Fragment>\r\n    )\r\n}","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nexport default function Nav(){\r\n    return (\r\n        <React.Fragment>\r\n            <nav>\r\n                <ul>\r\n                    <li><NavLink to={'/recipes'}>Home</NavLink></li>\r\n                    <li><NavLink to={'/recipes/create'}>Create Recipe</NavLink></li>\r\n                    <li><NavLink to={'/diets'}>Diets Info</NavLink></li>\r\n                </ul>\r\n            </nav>\r\n        </React.Fragment>\r\n\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { createRecipe } from \"../../redux/actions\";\r\nimport { useDispatch } from 'react-redux'\r\n\r\nexport default function CreateRecipe(){\r\n    // SETEO ESTADOS INIIALES DE COMPONENTES DEL FORMULARIO\r\n    let[input,setInput]=React.useState({name:'',resume:'',hs:'',steps:'',image:'',diets:''});\r\n    let[checked, setChecked] = React.useState([]);\r\n    const checkList  = ['gluten free', 'ketogenic', 'vegetarian', 'lacto vegetarian','ovo vegetarian', 'lacto ovo vegetarian', 'vegan', 'pescetarian', 'paleolithic', 'primal', 'low fodmap', 'whole 30', 'dairy free']; \r\n\r\n    //MANEJADOR DE EVENTOS DE CAMBIO EN CAMPOS IMPUTS\r\n    let handleChange=(event)=>{\r\n        event.preventDefault();\r\n        setInput((prev) => ({...prev,[event.target.name]:event.target.value}))   \r\n    }\r\n\r\n    //MANEJADOR DE EVENTOS DE SELECCION DE CHECKBOXES\r\n    let handleCheck = (event) => {\r\n        var updatedList = [...checked];\r\n        if (event.target.checked) {\r\n          updatedList = [...checked, event.target.value];\r\n        } else {\r\n          updatedList.splice(checked.indexOf(event.target.value), 1);\r\n        }\r\n        setChecked(updatedList); \r\n    };\r\n\r\n    //MANEJADOR DE SUBMIT DEL FORM\r\n\r\n    let dispatch = useDispatch();\r\n    let handlesubmit=(event)=>{\r\n        event.preventDefault();\r\n        input.diets=checked // Almaceno en dietas el arreglo generado por los items chequeados de la lista de dietas\r\n        //=========== VALIDACIONES DEL FORMULARIO =========== \r\n\r\n        //=================================================== \r\n        dispatch(createRecipe(input))\r\n        //console.log(input)\r\n        setInput({name:'',resume:'',hs:'',steps:'',image:''})//Limpio el Form despues de guardar\r\n    }\r\n\r\n    //FORMULARIO\r\n    return(\r\n        <React.Fragment>\r\n            <div>Create New Recipe</div>\r\n            <br/>\r\n            <form onSubmit={event=>handlesubmit(event)}>\r\n                <div>\r\n                    <label>Recipe Name: </label>\r\n                    <input type={'text'} name={'name'} value={input.name}\r\n                    onChange={(event)=>handleChange(event)}/>\r\n                </div>\r\n                <div>\r\n                    <label>Resume: </label>\r\n                    <input type={'text'} name={'resume'} value={input.resume}\r\n                    onChange={(event)=>handleChange(event)}/>\r\n                </div>\r\n                <div>\r\n                    <label>Step by Step: </label>\r\n                    <input type={'text'} name={'steps'} value={input.steps}\r\n                    onChange={(event)=>handleChange(event)}/>\r\n                </div>\r\n                <div>\r\n                    <label>healthlth Score: </label>\r\n                    <input type={'number'} name={'hs'} value={input.hs}\r\n                    onChange={(event)=>handleChange(event)}/>\r\n                </div>\r\n                    <div className=\"checkList\">\r\n                        <div className=\"title\">Diets Types:</div>\r\n                        <div className=\"diets-list\">\r\n                        {checkList.map((item, index) => (\r\n                            <div key={index}>\r\n                            <input type=\"checkbox\" value={item} onChange={handleCheck} />{item.charAt(0).toUpperCase() + item.slice(1)}\r\n                            </div>\r\n                        ))}\r\n                        </div>\r\n                    </div>   \r\n                <div>\r\n                    <label>Image: </label>\r\n                    <input type={'file'} name={'image'} value={input.image}\r\n                    onChange={(event)=>handleChange(event)}/>\r\n                </div>  \r\n                <br/>\r\n\r\n                {/* BOTONES DEL FORMULARIO */}\r\n\r\n                <input type={'submit'}  value={'Create'}/>                                                                    \r\n                <input type={'reset'}  value={'Reset'}/> \r\n            </form>\r\n        </React.Fragment>\r\n    )\r\n}","//MWMWMWMWMWMWMWMWMWMWMWMWMWMWMWMWMWMWMWMWMWMW\r\n// ACCIONES DE REDUX\r\n//MWMWMWMWMWMWMWMWMWMWMWMWMWMWMWMWMWMWMWMWMWMW\r\n\r\nexport function createRecipe(data){\r\n    return{type:'CREATE_RECIPE', payload: data}\r\n}","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function RecipeCard({id,image,name,diets}){\r\n    return(\r\n      <div>\r\n            <div>{image}</div>\r\n            <Link to={`/recipes/${id}`}> {name} </Link>\r\n            <div>{diets}</div>\r\n      </div>\r\n    )\r\n}","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport RecipeCard from \"../RecipeCard/RecipeCard\";\r\n\r\nexport function ListRecipe({RecipeX}){\r\n    return(\r\n        <div>\r\n            {\r\n                RecipeX && RecipeX.map(r=><div>\r\n                    <RecipeCard key={r.id} id={r.id} image={r.image} name={r.name} diets={r.diets} />\r\n                </div>)\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return{\r\n        RecipeX: state.recipe\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,null)(ListRecipe)","import React from \"react\";\r\n\r\nexport default function RecipeDetail({id,image,name,resume,hs,steps,diets}){\r\n    return(\r\n      <div>\r\n            <div>{image}</div>\r\n            <div>{name}</div>\r\n            <div>Resumen: {resume}</div>\r\n            <div>healthlth Score: {hs}</div>\r\n            <div>Steps: {steps}</div>\r\n            <div>Diets: {diets}</div>\r\n      </div>\r\n    )\r\n}","import './App.css';\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport IniButon from './components/Buton/Buton';\nimport Nav from './components/Nav/Nav';\nimport CreateRecipe from './components/CreateRecipe/CreateRecipe';\nimport RecipeList from './components/RecipeList/RecipeList';\nimport RecipeDetail from './components/RecipeDetail/RecipeDetail'\n\n\n\nfunction App() {\n  return (\n    <React.Fragment>\n\n      <Route exact path={'/'} component={IniButon}/>\n      <Route path={'/recipes'} component={Nav}/>  \n      <Route path={'/recipes'} component={RecipeList}/> \n      <Route exact path={'/recipe/:id'} component={RecipeDetail}/>\n      <Route exact path={'/recipes/create'} component={CreateRecipe}/> \n    </React.Fragment>\n  );\n}\n\nexport default App;\n","//MWMWMWMWMWMWMWMWMWMWMWMWMWMWMWMWMWMWMWMWMWMW\r\n// REDUCER\r\n//MWMWMWMWMWMWMWMWMWMWMWMWMWMWMWMWMWMWMWMWMWMW\r\nlet index=1\r\nconst initialState={\r\n    RecipeX:[] //Recetas creadas\r\n}\r\nexport default function rootReducer(state=initialState,action){\r\n    switch (action.type) {\r\n        case 'CREATE_RECIPE':\r\n            return {\r\n                ...state,\r\n                RecipeX: [...state.RecipeX,{...action.payload,id:index++}]\r\n            }\r\n        default:\r\n            return {...state};\r\n    }\r\n}","//MWMWMWMWMWMWMWMWMWMWMWMWMWMWMWMWMWMWMWMWMWMW\r\n// STORE\r\n//MWMWMWMWMWMWMWMWMWMWMWMWMWMWMWMWMWMWMWMWMWMW\r\n\r\nimport { createStore,applyMiddleware, compose } from 'redux';\r\nimport rootReducer from '../reducer';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst composeEnhanscer=window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(rootReducer,composeEnhanscer(applyMiddleware(thunk)));\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store  from \"./redux/store\";\n\n\nReactDOM.render(\n<Provider store={store}>\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n</Provider>\n  ,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}